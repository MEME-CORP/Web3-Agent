{
    "info": {
      "name": "Solana Buy & Burn Collection",
      "_postman_id": "12345-6789-ABCDE-TEST",
      "description": "Collection for testing /buy-tokens and /burn-tokens endpoints",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Burn Tokens",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"fromPrivateKey\": \"{{wallet_private_key}}\",\n  \"fromPublicKey\": \"{{wallet_public_key}}\",\n  \"mintAddress\": \"{{token_mint_address}}\",\n  \"amount\": 0.00000001,\n  \"decimals\": 9\n}"
          },
          "url": {
            "raw": "{{baseUrl}}/burn-tokens",
            "protocol": "http",
            "host": [
              "{{baseUrl}}"
            ],
            "path": [
              "burn-tokens"
            ]
          },
          "description": "Burns specified amount of tokens from a mint address"
        },
        "response": [
          {
            "name": "Successful Token Burn",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"fromPrivateKey\": \"EXAMPLE_PRIVATE_KEY\",\n  \"fromPublicKey\": \"EXAMPLE_PUBLIC_KEY\",\n  \"mintAddress\": \"EXAMPLE_MINT_ADDRESS\",\n  \"amount\": 0.00000001,\n  \"decimals\": 9\n}"
              }
            },
            "status": "OK",
            "code": 200,
            "_postman_previewlanguage": "json",
            "header": [],
            "body": "{\n    \"status\": \"success\",\n    \"message\": \"Tokens burned successfully\",\n    \"signature\": \"2xGVGnwqSHAQEMdHvhXGBTxzz7YdKyUnpyF1LYK3kgGHjKZRqk9PFDBNmPTPAFXmJkHE3YzNHa4Pmj8TEpgHnWHk\",\n    \"amount\": 0.00000001,\n    \"token\": \"EXAMPLE_MINT_ADDRESS\"\n}"
          }
        ]
      },
      {
        "name": "Buy Tokens",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"privateKey\": \"{{wallet_private_key}}\",\n  \"tokenAddress\": \"{{token_mint_address}}\",\n  \"amountUSD\": 0.1\n}"
          },
          "url": {
            "raw": "{{baseUrl}}/buy-tokens",
            "protocol": "http",
            "host": [
              "{{baseUrl}}"
            ],
            "path": [
              "buy-tokens"
            ]
          },
          "description": "Purchases tokens using Jupiter swap"
        },
        "response": [
          {
            "name": "Successful Token Purchase",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"privateKey\": \"EXAMPLE_PRIVATE_KEY\",\n  \"tokenAddress\": \"EXAMPLE_TOKEN_ADDRESS\",\n  \"amountUSD\": 0.1\n}"
              }
            },
            "status": "OK",
            "code": 200,
            "_postman_previewlanguage": "json",
            "header": [],
            "body": "{\n    \"status\": \"success\",\n    \"message\": \"Token purchase completed successfully\",\n    \"data\": {\n        \"transactionId\": \"2xGVGnwqSHAQEMdHvhXGBTxzz7YdKyUnpyF1LYK3kgGHjKZRqk9PFDBNmPTPAFXmJkHE3YzNHa4Pmj8TEpgHnWHk\",\n        \"tokenAddress\": \"EXAMPLE_TOKEN_ADDRESS\",\n        \"amountUSD\": 0.1,\n        \"explorerUrl\": \"https://solscan.io/tx/2xGVGnwqSHAQEMdHvhXGBTxzz7YdKyUnpyF1LYK3kgGHjKZRqk9PFDBNmPTPAFXmJkHE3YzNHa4Pmj8TEpgHnWHk\"\n    }\n}"
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "type": "text/javascript",
          "exec": [""]
        }
      },
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code is 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Response has correct structure\", function () {",
            "    const responseData = pm.response.json();",
            "    pm.expect(responseData).to.have.property('status');",
            "    pm.expect(responseData).to.have.property('message');",
            "});"
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "http://localhost:3001",
        "type": "string"
      },
      {
        "key": "wallet_private_key",
        "value": "YOUR_PRIVATE_KEY",
        "type": "string"
      },
      {
        "key": "wallet_public_key",
        "value": "YOUR_PUBLIC_KEY",
        "type": "string"
      },
      {
        "key": "token_mint_address",
        "value": "TOKEN_MINT",
        "type": "string"
      }
    ]
}
  